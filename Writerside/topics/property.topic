<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="프로퍼티" id="property">

    <procedure title="프로퍼티의 필요성">
        <step>
            <code-block lang="c#">
                using System.Collections;
                using System.Collections.Generic;
                using Unity.Collections.LowLevel.Unsafe;
                using UnityEngine;

                public class TestScript : MonoBehaviour
                {
                    // Start is called before the first frame update
                    void Start()
                    {
                        int number1 = 1;
                    }

                    // Update is called once per frame
                    void Update()
                    {
                        int number2 = number1 + 1;
                    }
                }
            </code-block>
            <list>
                <li>Start 에서 추가한 변수 number1 을 Update 에서 사용하려고 할 때, 빨간 밑줄이 그어지며 에러가 발생된 것을 볼 수 있습니다.</li>
                <li>변수는 범위가 있어서, 해당 구간에서만 유효합니다.</li>
                <li>위와 같은 경우에 변수 number1 은 Start 영역에서만 유효하기 떄문에, Update 영역에서는 사용할 수 없는 것입니다.</li>
            </list>
        </step>
    </procedure>

    <procedure title="프로퍼티 사용">
        <step>
            <code-block lang="c#">
                using System.Collections;
                using System.Collections.Generic;
                using Unity.Collections.LowLevel.Unsafe;
                using UnityEngine;

                public class TestScript : MonoBehaviour
                {
                    int _number1;

                    // Start is called before the first frame update
                    void Start()
                    {
                        _number1 = 1;
                    }

                    // Update is called once per frame
                    void Update()
                    {
                        int number2 = _number1 + 1;
                    }
                }
            </code-block>
            <list>
                <li>변수 number1을 Start 영역 내부가 아닌 TestScript 클래스 아래에 선언한다면, Start 와 Update 에서 모두 사용할 수 있습니다.</li>
                <li>이렇게 클래스가 가지고 있는 변수를 <path>프로퍼티(Property)</path> 라고 부르며, 해당 클래스의 상태를 표현한다고 볼 수 있습니다.</li>
                <li>프로퍼티의 이름은 통상적으로 이름 앞에 <path>언더바(_)</path> 를 포함합니다.</li>
            </list>
        </step>
    </procedure>
</topic>