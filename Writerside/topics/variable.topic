<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="변수와 타입" id="variable">

    <chapter title="변수의 구성 요소">
        <deflist>
            <def title="이름">
                <p>변수는 이름을 가지고 있어야 합니다. 변수의 이름은 프로그래머가 정의하며, 식별자(identifier)라 불리기도 합니다.</p>
            </def>
            <def title="데이터 타입">
                <p>변수는 특정한 데이터 타입을 가집니다. 데이터 타입은 변수에 저장될 수 있는 데이터의 종류를 나타냅니다.</p>
            </def>
            <def title="값">
                <p>변수에는 어떤 값이 저장됩니다. 이 값은 변수의 타입에 맞아야 합니다. 변수는 프로그램 실행 중에 여러 번 값이 변경될 수 있습니다.</p>
            </def>
        </deflist>
    </chapter>

    <procedure title="변수의 선언">
        <step>
            <code-block lang="c#">
                using System.Collections;
                using System.Collections.Generic;
                using UnityEngine;

                public class TestScript : MonoBehaviour
                {
                // Start is called before the first frame update
                void Start()
                {
                int number = 365;
                Debug.Log(number);
                }

                // Update is called once per frame
                void Update()
                {
                }
                }
            </code-block>
            <list>
                <li>변수는 <path>[데이터 타입] [이름] = [값]</path> 의 구조를 가집니다.</li>
                <li>위 코드에서 변수의 이름은 <path>number</path>, 데이터 타입은 <path>int</path>, 값은 <path>365</path> 입니다.</li>
                <li>변수 number 를 선언한 이후에 로그로 출력합니다.</li>
            </list>
        </step>
        <step>
            <img alt="variable-1.png" src="variable-1.png"/>
            <p>실행 시, 로그가 출력됩니다.</p>
        </step>
    </procedure>

    <chapter title="데이터 타입">
        <list>
            <li>변수에는 데이터 타입이 필요하며, 해당 변수가 어떤 형식의 값을 가지고 있는지 구분합니다.</li>
            <li>데이터 타입에는 다양한 종류가 있으며, 그 중에 int 와 string 에 대해서만 먼저 알아보겠습니다.</li>
        </list>

        <procedure title="int">
            <step>
                <list>
                    <li><path>int</path> 타입은 자연수 숫자를 나타냅니다.</li>
                    <li>숫자 형식이기 때문에 기본적인 사칙연산과 같은 연산이 가능합니다.</li>
                    <li>현실에서 숫자를 사용하듯 여러가지 숫자 표현에 사용됩니다.</li>
                </list>
            </step>
            <step>
                <code-block lang="c#">
                    using System.Collections;
                    using System.Collections.Generic;
                    using UnityEngine;

                    public class TestScript : MonoBehaviour
                    {
                        // Start is called before the first frame update
                        void Start()
                        {
                            int number1 = 5;
                            int number2 = 10;
                            int number3 = number1 + number2;
                            Debug.Log(number1);
                            Debug.Log(number2 + 2);
                            Debug.Log(number3);
                        }

                        // Update is called once per frame
                        void Update()
                        {
                        }
                    }
                </code-block>
                <list>
                    <li>number3은 두 변수의 합을 값으로 갖습니다.</li>
                    <li>두번째 로그에서는 number2의 값에 2를 더한 값을 로그로 출력합니다.</li>
                </list>
            </step>
            <step>
                <img alt="variable-3.png" src="variable-3.png"/>
                <p>실행 시, 로그가 출력됩니다.</p>
            </step>
        </procedure>

        <procedure title="string">
            <step>
                <list>
                    <li><path>string</path> 은 단어나 문장과 같은 문자열 데이터를 나타냅니다.</li>
                    <li>문자열 데이터로 두 문장을 이어 붙인다거나 영어 문장을 소문자로 바꾸는 등의 처리가 가능합니다.</li>
                    <li>현실에서 메시지를 사용하듯 문구를 표현할 때 사용합니다.</li>
                </list>
            </step>
            <step>
                <code-block lang="c#">
                    using System.Collections;
                    using System.Collections.Generic;
                    using UnityEngine;

                    public class TestScript : MonoBehaviour
                    {
                        // Start is called before the first frame update
                        void Start()
                        {
                            string message1 = "Hello";
                            string message2 = "World!";
                            string message3 = "HI";
                            Debug.Log(message1);
                            Debug.Log(message1 + message2);
                            Debug.Log(message3.ToLower());
                        }

                        // Update is called once per frame
                        void Update()
                        {
                        }
                    }
                </code-block>
                <list>
                    <li>string 타입은 값에 " " 를 사용하여 선언합니다.</li>
                    <li>string 타입의 덧셈은 두 문자열을 이어 붙이는 처리가 됩니다.</li>
                    <li>ToLower() 를 사용하면 문자를 소문자로 변경할 수 있습니다.</li>
                </list>
            </step>
            <step>
                <img alt="variable-4.png" src="variable-4.png"/>
                <p>실행 시, 로그가 출력됩니다.</p>
            </step>
        </procedure>
    </chapter>

</topic>